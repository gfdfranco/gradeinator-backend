services:
  # PostgreSQL database service for production
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    networks:
      - gradeinator_prod
    restart: unless-stopped

  # Flask application service - Production
  app:
    build: 
      context: .
      dockerfile: dockerfile
    ports:
      - "${PROD_PORT}:5000"
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_DEBUG: ${FLASK_DEBUG}
      FLASK_APP: ${FLASK_APP}
      DATABASE_URL: ${DATABASE_URL}
      APP_SECRET_KEY: ${APP_SECRET_KEY}
    depends_on:
      - db
    networks:
      - gradeinator_prod
    restart: unless-stopped
    command: gunicorn -w 4 -b 0.0.0.0:5000 "app:create_app()"

volumes:
  db_data_prod:

networks:
  gradeinator_prod:
    driver: bridge 